#include<bits/stdc++.h>
using namespace std;
int fun(int i,int a[],int n,int k)
{
    if(i>=n-1)return 0;
    int ans=INT_MAX;
    for(int j=1;j<=k;j++)
    {
        ans=min(ans,abs(a[i]-a[i+j])+fun(i+j,a,n,k));
    }
    return ans;
    
}
int main()
{
    int n;
    cin>>n;
    int k;
    cin>>k;
    int a[n];
    for(int i=0;i<n;i++){
        cin>>a[i];
    }
    vector<int>an(n+1,-1);
    cout<<fun(0,a,n,k);
    
}


/////////////////dppp///////////
#include<bits/stdc++.h>
using namespace std;
int fun(int i,int a[],int n,int k,vector<int>&dp)
{
    if(i>=n-1)return 0;
    int ans=INT_MAX;
    if(dp[i]!=-1) return dp[i];
    for(int j=1;j<=k;j++)
    {
        ans=min(ans,abs(a[i]-a[i+j])+fun(i+j,a,n,k,dp));
    }
    return dp[i]=ans;
    
}
int main()
{
    int n;
    cin>>n;
    int k;
    cin>>k;
    int a[n];
    for(int i=0;i<n;i++){
        cin>>a[i];
    }
    vector<int>dp(n+1,-1);
    cout<<fun(0,a,n,k,dp);
    
}
